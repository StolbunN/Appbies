*,::after,::before{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box}html{font-size:62.5%}body{font:400 1.6rem "Lato",sans-serif;height:100%;color:#fff}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{text-decoration:none}li,ol,ul{list-style:none}.wrapper{min-height:100%;overflow:hidden}._container{max-width:120rem;padding:0 1.5rem;margin:0 auto}._ibg{position:relative}._ibg img{position:absolute;top:0;left:0;width:100%;height:100%;-o-object-fit:cover;object-fit:cover}._lock{overflow:hidden}@font-face{font-family:"Lato";src:url(../font/Lato-Light.eot) format("eot"),url(../font/Lato-Light.ttf) format("truetype"),url(../font/Lato-Light.woff) format("woff"),url(../font/Lato-Light.woff2) format("woff2");font-weight:300;font-style:normal}@font-face{font-family:"Lato";src:url(../font/Lato-Regular.eot) format("eot"),url(../font/Lato-Regular.ttf) format("truetype"),url(../font/Lato-Regular.woff) format("woff"),url(../font/Lato-Regular.woff2) format("woff2");font-weight:400;font-style:normal}@font-face{font-family:"Lato";src:url(../font/Lato-Italic.eot) format("eot"),url(../font/Lato-Italic.ttf) format("truetype"),url(../font/Lato-Italic.woff) format("woff"),url(../font/Lato-Italic.woff2) format("woff2");font-weight:400;font-style:italic}@font-face{font-family:"Lato";src:url(../font/Lato-Bold.eot) format("eot"),url(../font/Lato-Bold.ttf) format("truetype"),url(../font/Lato-Bold.woff) format("woff"),url(../font/Lato-Bold.woff2) format("woff2");font-weight:700;font-style:normal}.title-1{font-weight:300;font-size:4.7rem;line-height:1.2}.title-2{font:300 4.7rem/1.2 Lato;color:#fff8f6}.title-2_gray{color:#343434}.subtitle{font-size:18px;line-height:30px;font-weight:400;letter-spacing:.025em;color:#fff8f6}.button{font-size:1.5rem;line-height:30px;font-weight:700;text-transform:uppercase;letter-spacing:.05em;height:38px;cursor:pointer}.hamburger{display:none}.hamburger.active::after,.hamburger.active::before{background:#000}.hamburger.active::before{top:50%;-webkit-transform:rotate(-45deg) translate(0,-50%);-ms-transform:rotate(-45deg) translate(0,-50%);transform:rotate(-45deg) translate(0,-50%)}.hamburger.active::after{top:50%;-webkit-transform:rotate(45deg) translate(0,-50%);-ms-transform:rotate(45deg) translate(0,-50%);transform:rotate(45deg) translate(0,-50%)}.header{width:100%;position:absolute;top:0;left:0;z-index:50}.header__container{min-height:10rem;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header__container,.menu__list{display:-webkit-box;display:-ms-flexbox;display:flex}.menu__item:not(:last-child){margin-right:3.5rem}.menu__link{font-size:1.5rem;text-transform:uppercase;line-height:1.2;color:inherit;-webkit-transition:all .3s;transition:all .3s}.menu__link.active--item,.menu__link:hover{text-shadow:0 0 26px #fff}.main-block{position:relative;padding:14rem 0 0}.main-block__container{position:relative;z-index:2;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-column-gap:30px;-moz-column-gap:30px;column-gap:30px}.main-block__column{-webkit-box-flex:0;-ms-flex:0 1 50%;flex:0 1 50%;text-align:center}.main-block__body{padding:12.9rem 0 0;max-width:51.6rem}.main-block__title{margin-bottom:5.6rem}.download__text span,.main-block__title span{font-weight:700}.main-block__text{letter-spacing:.05em;color:#fff;margin-bottom:7.6rem}.main-block__button{font-size:2rem;line-height:1.2;font-weight:300;color:inherit;display:inline-block;padding:2rem 7.6rem;border:2px solid #fff}.main-block__img{position:absolute;top:0;left:0;height:100%;width:100%}.download-area{position:relative;padding:17rem 0 25.2rem;margin:-22rem 0 4.2rem;z-index:2}.download-area__container{position:relative;text-align:center;z-index:5}.download-area__title{margin-bottom:3.9rem}.download-area__subtitle{margin-bottom:7.5rem}.download-area__button{width:38.6rem;font-size:3rem;line-height:1.2;font-weight:300;color:inherit;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:3.2rem 0;border:2px solid #fff}.download-area__button img{margin-right:3.7rem}.download-area__button:not(:last-child){margin-right:6rem}.download-area__img{position:absolute;top:0;left:0;height:100%;width:100%}.app-feature__container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-column-gap:2rem;-moz-column-gap:2rem;column-gap:2rem}.app-feature__column{-webkit-box-flex:0;-ms-flex:0 1 45%;flex:0 1 45%}.app-feature__column:last-child{-webkit-box-flex:0;-ms-flex:0 1 50%;flex:0 1 50%;text-align:center}.app-feature__title{padding:1.5rem 0 5.3rem}.app-feature__features{display:grid;grid-template-columns:repeat(2,-webkit-max-content);grid-template-columns:repeat(2,max-content);row-gap:4rem;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.app-feature__feature,.feature__image{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.app-feature__feature{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.feature__image{width:9.8rem;height:9.8rem;border:2px solid #007ecf;border-radius:50%;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin:0 0 1.9rem}.feature__text{text-transform:uppercase;font-size:18px;line-height:30px;letter-spacing:.025em;color:#585858}.why-choose{position:relative;padding:17.6rem 0}.why-choose__container{position:relative;z-index:5;text-align:center}.why-choose__title{margin-bottom:3.1rem}.why-choose__subtitle{margin-bottom:6.5rem}.why-choose__row{display:-webkit-box;display:-ms-flexbox;display:flex}.why-choose__column{-webkit-box-flex:0;-ms-flex:0 1 33.33333%;flex:0 1 33.33333%}.why-choose__left-content{text-align:end}.why-choose__right-content{text-align:start}.why-choose__img{position:absolute;top:0;left:0;width:100%;height:100%}.advantage__title{font-size:20px;line-height:30px;font-weight:700;text-transform:uppercase;letter-spacing:.025em;margin-bottom:2.8rem}.advantage__text{font-size:18px;line-height:30px;letter-spacing:.05em;color:#fff;margin-bottom:7rem}.app-screenshots{padding:10rem 0 8.4rem}.app-screenshots__title{text-align:center;margin-bottom:6.3rem}.app-screenshots__body{position:relative}.app-screenshots__slider{height:56.5rem}.app-screenshots__arrow-left{left:0}.app-screenshots__arrow-right{right:0}.slider{margin:0 7.2rem;position:relative;overflow:hidden}.arrow,.slide{position:absolute}.slide,.slide img{width:100%;height:100%}.slide{text-align:center;top:0;left:0;-webkit-transition:-webkit-transform 1s;transition:transform 1s;transition:transform 1s,-webkit-transform 1s}.slide img{-o-object-fit:contain;object-fit:contain}.arrow{top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);width:7.2rem;height:7.2rem;border:2px solid #007ecf;border-radius:50%}.video-showcase{position:relative;padding:18.5rem 0 21.4rem}.video-showcase__container{position:relative;z-index:5;text-align:center}.video-showcase__title{margin-bottom:8.2rem}.video-showcase__img{position:absolute;top:0;left:0;width:100%;height:100%}.video{position:relative;padding:0 3rem}.video__item{max-width:100%;cursor:pointer}.play{position:absolute;width:6.6rem;height:6.6rem;border:3.3rem solid transparent;border-left:6rem solid #fff;top:50%;left:50%;-webkit-transform:translate(-30%,-50%);-ms-transform:translate(-30%,-50%);transform:translate(-30%,-50%);cursor:pointer}.updates{padding:14rem 0 8.3rem}.updates__title{text-align:center;margin-bottom:7.5rem}.updates__row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-bottom:7.5rem}.updates__column{-webkit-box-flex:0;-ms-flex:0 1 50%;flex:0 1 50%}.updates__column:not(:last-child){margin-right:3rem}.updates__downloads,.updates__form{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.updates__form{padding-left:3.7rem;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end}.updates__btn{background:#fff;border:2px solid #5d5d5d;color:#505050;min-width:100px}.updates__img{text-align:center}.updates__img img{max-width:100%}.download{width:16.7rem;height:16.7rem;border-radius:50%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.download:not(:last-child){margin-right:2rem}.download__android{background:#a5c63b}.download__img{margin-bottom:1.3rem}.download__text{text-align:center;font-size:1.8rem;line-height:1.2;font-weight:700}.download__apple{background:#009ddc}.download__windows{background:#f8682c}.email-update{width:100%;margin-right:3.7rem}.email-update__label{font-size:18px;line-height:30px;font-weight:400;font-style:italic;letter-spacing:.05em;color:#1b1b1b;margin-bottom:2.8rem;display:block}.email-update__input{padding:1.6rem 0;display:block;width:100%;border:0;border-bottom:1px solid #8b8b8b}.email-update__input::-webkit-input-placeholder{font-size:1.5rem;line-height:30px;font-weight:400;letter-spacing:.05em;color:#8b8b8b}.email-update__input::-moz-placeholder{font-size:1.5rem;line-height:30px;font-weight:400;letter-spacing:.05em;color:#8b8b8b}.email-update__input:-ms-input-placeholder{font-size:1.5rem;line-height:30px;font-weight:400;letter-spacing:.05em;color:#8b8b8b}.email-update__input::-ms-input-placeholder{font-size:1.5rem;line-height:30px;font-weight:400;letter-spacing:.05em;color:#8b8b8b}.email-update__input::placeholder{font-size:1.5rem;line-height:30px;font-weight:400;letter-spacing:.05em;color:#8b8b8b}.support-area{position:relative;padding:15.9rem 0 22rem}.support-area__container{position:relative;z-index:5}.support-area__title{text-align:center;margin-bottom:6.9rem}.support-area__content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.support-area__column{-webkit-box-flex:0;-ms-flex:0 1 33.3333%;flex:0 1 33.3333%}.support-area__info{text-align:center}.support-area__chat{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.support-area__img{position:absolute;top:0;left:0;width:100%;height:100%}.form__input-block:not(:last-child){margin-bottom:2.4rem}.form__input{width:100%;padding:1.6rem 0;background:0 0;font-size:18px;line-height:35px;font-weight:400;letter-spacing:.05em;border:0;border-bottom:1px solid #fff;color:inherit}.form__input::-webkit-input-placeholder{font-weight:400;letter-spacing:.05em;color:#fff}.form__input::-moz-placeholder{font-weight:400;letter-spacing:.05em;color:#fff}.form__input:-ms-input-placeholder{font-weight:400;letter-spacing:.05em;color:#fff}.form__input::-ms-input-placeholder{font-weight:400;letter-spacing:.05em;color:#fff}.form__input::placeholder{font-weight:400;letter-spacing:.05em;color:#fff}.form__btn{background:0 0;color:inherit;min-width:100px;height:38px;border:2px solid #fff}.message__input{min-height:13.8rem;resize:none;margin-bottom:2.4rem}.info__tel img{margin-bottom:3.4rem}.info__email img{margin-bottom:2.3rem}.info__location img{margin-bottom:2.6rem}.block-info{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.block-info:not(:last-child){margin-bottom:7.9rem}.block-info__link{font-size:18px;line-height:30px;font-weight:400;letter-spacing:.05em;color:inherit}.chat__title{font-size:30px;line-height:1.2;font-weight:700;margin-bottom:5rem}.chat__icon{width:170px;height:170px;margin-bottom:3.3rem}.chat__name{font-size:18px;line-height:30px;font-weight:400;letter-spacing:.05em;margin-bottom:.5rem}.chat__status{background:#05d10f;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:12px;font-weight:700;text-transform:uppercase;width:85px;height:23px;border-radius:11.5px;margin-bottom:3.5rem}.chat__btn{background:0 0;color:inherit;padding:0 2.6rem 0 2.9rem;height:38px;border:2px solid #fff}.footer{padding:4.6rem 0 4.1rem}.footer__container{text-align:center}.footer__logo{margin-bottom:4.8rem}.footer__social-network{margin:0 1rem 5.4rem 0}.footer__copyright{font-size:15px;line-height:30px;font-weight:400;color:#2c2c2c}.social-network{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end}.social-network__img:not(:last-child){margin-right:6.5rem}@media only screen and (max-width:991px){html{font-size:54%}.download-area{margin-top:-24rem}.app-feature__phones{width:90%;-ms-flex-item-align:center;align-self:center}.why-choose__row{display:block}.why-choose__column:nth-child(2){display:none}.why-choose__left-content,.why-choose__right-content{text-align:center}.updates__row{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.updates__column:not(:last-child){margin:0 0 3rem}}@media only screen and (max-width:767px){html{font-size:50%}.hamburger{display:block;position:fixed;z-index:20;width:30px;height:24px;right:10px;top:26px;cursor:pointer}.hamburger span,.hamburger::after,.hamburger::before{left:0;position:absolute;width:100%;height:10%;background-color:#bdbdbd;-webkit-transition:all .3s;transition:all .3s}.hamburger::after,.hamburger::before{content:""}.hamburger::before{top:0}.hamburger::after{bottom:0}.hamburger span{top:50%;-webkit-transform:scale(1) translate(0,-50%);-ms-transform:scale(1) translate(0,-50%);transform:scale(1) translate(0,-50%)}.hamburger.active span{-webkit-transform:scale(0) translate(0,-50%);-ms-transform:scale(0) translate(0,-50%);transform:scale(0) translate(0,-50%)}.menu__list{position:fixed;top:0;right:-100%;width:100%;height:100%;background:rgba(255,255,255,.7);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:space-evenly;-ms-flex-pack:space-evenly;justify-content:space-evenly;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:#000;-webkit-transition:all .3s;transition:all .3s}.menu__list.active{right:0}.menu__item:not(:last-child){margin-right:0}.menu__link{font-size:3rem;font-weight:700}.menu__link:hover{text-shadow:0 0 26px #000}.menu__link.active--item{text-shadow:0 0 15px #000}.main-block{padding:8rem 0 24rem}.main-block__container{display:block}.main-block__column:last-child{display:none}.main-block__body{padding:4.9rem 0 0;max-width:100%}.main-block__text,.main-block__title{margin-bottom:3rem}.main-block__img-phones img{width:90%}.download-area__button{display:-webkit-box;display:-ms-flexbox;display:flex;margin:0 auto}.download-area__button:not(:last-child){margin-bottom:2rem;margin-right:auto}.app-feature__container{display:block}.app-feature__column:last-child{display:none}.app-feature__column{text-align:center}.app-feature__features{-ms-flex-pack:distribute;justify-content:space-around}.support-area__content{display:block}.support-area__column:not(:last-child){margin-bottom:3rem}}@media only screen and (max-width:575px){.download-area__button{max-width:75%}.download-area__button img{margin-right:0}.download-area__button span{display:none}.app-screenshots{padding:5rem 0 15rem}.app-screenshots__arrow-left{left:20%}.app-screenshots__arrow-right{right:20%}.slider{margin:0 2rem}.arrow{top:105%;-webkit-transform:translateY(10px);-ms-transform:translateY(10px);transform:translateY(10px)}.updates__form{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.updates__btn{width:100%}.email-update{margin-right:0}.email-update__input{margin-bottom:2rem}}@media only screen and (max-width:486px){.app-feature__features{grid-template-columns:1fr}.play{width:4.4rem;height:4.4rem;border:2.2rem solid transparent;border-left:4rem solid #fff}.updates__downloads{-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:distribute;justify-content:space-around}.updates__img{display:none}.download:not(:last-child){margin-right:1rem}.download{margin:1rem}.social-network__img:not(:last-child){margin-right:3rem}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */